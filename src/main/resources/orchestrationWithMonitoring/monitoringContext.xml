<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="monitoringDataAccessQueue" class="org.copperengine.monitoring.server.monitoring.MonitoringDataAccessQueue">
        <constructor-arg type="org.copperengine.monitoring.core.data.MonitoringDataAccessor">
            <ref bean="monitoringDataAccessor"/>
        </constructor-arg>
        <constructor-arg type="org.copperengine.monitoring.core.data.MonitoringDataAdder">
            <ref bean="monitoringDataAdder"/>
        </constructor-arg>
    </bean>

    <bean id="monitoringDataAdder" class="org.copperengine.monitoring.core.data.MonitoringDataAdder">
        <constructor-arg type="org.copperengine.monitoring.core.data.MonitoringDataStorage">
            <ref bean="monitoringDataStorage"/>
        </constructor-arg>
    </bean>

    <bean id="monitoringDataAccessor" class="org.copperengine.monitoring.core.data.MonitoringDataAccessor">
        <constructor-arg type="org.copperengine.monitoring.core.data.MonitoringDataStorage">
            <ref bean="monitoringDataStorage"/>
        </constructor-arg>
    </bean>

    <bean id="monitoringDataStorage" class="org.copperengine.monitoring.core.data.MonitoringDataStorage">
        <!-- tempDirPrefix --><constructor-arg type="java.lang.String"><value>logs/monitoring</value></constructor-arg>
        <!-- maxTotalSize --><constructor-arg type="long"><value>100000000</value></constructor-arg>
        <!-- daysToKeep --><constructor-arg type="long"><value>7</value></constructor-arg>
    </bean>

    <bean id="monitoringDataCollector" class="org.copperengine.monitoring.server.monitoring.MonitoringDataCollector">
        <constructor-arg type="org.copperengine.monitoring.server.monitoring.MonitoringDataAccessQueue">
            <ref bean="monitoringDataAccessQueue"/>
        </constructor-arg>
    </bean>

    <bean id="monitoringLogbackDataProvider" class="org.copperengine.monitoring.server.provider.MonitoringLogbackDataProvider">
        <constructor-arg type="org.copperengine.monitoring.server.monitoring.MonitoringDataCollector">
            <ref bean="monitoringDataCollector"/>
        </constructor-arg>
    </bean>

    <bean id="monitoringDependencyInjector" class="org.copperengine.monitoring.server.wrapper.MonitoringDependencyInjector">
        <constructor-arg type="org.copperengine.core.AbstractDependencyInjector">
            <ref bean="dependencyInjector"/>
        </constructor-arg>
        <constructor-arg type="org.copperengine.monitoring.server.monitoring.MonitoringDataCollector">
            <ref bean="monitoringDataCollector"/>
        </constructor-arg>
    </bean>

    <bean id="workflowInstanceIntrospector" class="org.copperengine.monitoring.server.debug.WorkflowInstanceIntrospector"  lazy-init="false">
        <constructor-arg type="org.copperengine.core.persistent.ScottyDBStorageInterface">
            <ref bean="persistent.dbStorage"/>
        </constructor-arg>
        <constructor-arg type="org.copperengine.core.common.WorkflowRepository">
            <ref bean="wfRepository"/>
        </constructor-arg>
    </bean>

    <bean id="derby-monitoring-db-dialect" class="org.copperengine.monitoring.server.persistent.DerbyMonitoringDbDialect">
        <constructor-arg type="org.copperengine.core.persistent.Serializer">
            <bean class="org.copperengine.core.persistent.StandardJavaSerializer"/>
        </constructor-arg>
        <constructor-arg type="org.copperengine.core.audit.MessagePostProcessor">
            <ref bean="compressedBase64PostProcessor"/>
        </constructor-arg>
        <constructor-arg type="org.copperengine.core.audit.BatchingAuditTrail">
            <ref bean="auditTrail"/>
        </constructor-arg>
    </bean>

    <bean id="monitoring-db-storage" class="org.copperengine.monitoring.server.persistent.MonitoringDbStorage">
        <constructor-arg type="org.copperengine.core.persistent.txn.TransactionController">
            <ref bean="txnController"/>
        </constructor-arg>
        <constructor-arg type="org.copperengine.monitoring.server.persistent.DatabaseMonitoringDialect">
            <ref bean="derby-monitoring-db-dialect"/>
        </constructor-arg>
    </bean>

    <bean id="monitoringDataProviderManager" class="org.copperengine.monitoring.server.provider.MonitoringDataProviderManager" init-method="startAll" lazy-init="true">
        <constructor-arg type="java.util.List">
            <list>
                <ref bean="systemResourceDataProvider"/>
                <ref bean="monitoringLogbackDataProvider"/>
                <ref bean="configurationDataProvider"/>
            </list>
        </constructor-arg>
    </bean>

    <bean id="copper-monitoring-service" class="org.copperengine.monitoring.server.DefaultCopperMonitoringService">
        <constructor-arg index="0" type="org.copperengine.monitoring.server.persistent.MonitoringDbStorage">
            <ref bean="monitoring-db-storage"/>
        </constructor-arg>
        <constructor-arg index="1" type="org.copperengine.management.StatisticsCollectorMXBean">
            <ref bean="statisticsCollector"/>
        </constructor-arg>
        <constructor-arg index="2" type="java.util.List">
            <list>
                <ref bean="persistent.engine"/>
            </list>
        </constructor-arg>
        <constructor-arg index="3" type="org.copperengine.monitoring.server.monitoring.MonitoringDataAccessQueue">
            <ref bean="monitoringDataAccessQueue"/>
        </constructor-arg>
        <constructor-arg index="4" type="boolean" value="true"/>
        <constructor-arg index="5" type="org.copperengine.monitoring.server.debug.WorkflowInstanceIntrospector">
            <ref bean="workflowInstanceIntrospector"/>
        </constructor-arg>
        <constructor-arg index="6" type="org.copperengine.monitoring.server.logging.LogConfigManager">
            <ref bean="logbackConfigManager"/>
        </constructor-arg>
        <constructor-arg index="7" type="org.copperengine.monitoring.server.provider.MonitoringDataProviderManager">
            <ref bean="monitoringDataProviderManager"/>
        </constructor-arg>
    </bean>

    <bean id="default-copper-monitoring-service" class="org.copperengine.monitoring.server.CopperMonitorServiceDefaultProxy" factory-method="getServiceProxy">
        <constructor-arg type="org.copperengine.monitoring.core.CopperMonitoringService">
            <ref bean="copper-monitoring-service"/>
        </constructor-arg>
    </bean>

    <bean id="compressedBase64PostProcessor" class="org.copperengine.core.audit.CompressedBase64PostProcessor"/>

    <bean id="statisticsCollector" class="org.copperengine.core.monitoring.LoggingStatisticCollector" init-method="start" destroy-method="shutdown"/>

    <bean id="realm" class="org.apache.shiro.realm.SimpleAccountRealm">
    </bean>

    <bean id="addUser" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="realm"/>
        <property name="targetMethod" value="addAccount"/>
        <property name="arguments">
            <list>
                <value>user1</value>
                <value>pass1</value>
            </list>
        </property>
    </bean>

    <bean id="logbackConfigManager" class="org.copperengine.monitoring.server.logging.LogbackConfigManager">
        <constructor-arg type="org.copperengine.monitoring.server.provider.MonitoringLogbackDataProvider">
            <ref bean="monitoringLogbackDataProvider"/>
        </constructor-arg>
    </bean>

    <bean id="configurationDataProvider" class="org.copperengine.monitoring.server.provider.ConfigurationDataProvider"
        lazy-init="true">
        <constructor-arg index="0" type="org.copperengine.monitoring.server.monitoring.MonitoringDataCollector">
            <ref bean="monitoringDataCollector"/>
        </constructor-arg>
        <constructor-arg index="1" type="java.util.List">
            <list>
                <ref bean="persistent.engine"/>
            </list>
        </constructor-arg>
        <constructor-arg index="2" type="org.copperengine.monitoring.core.data.MonitoringDataStorage">
            <ref bean="monitoringDataStorage"/>
        </constructor-arg>
    </bean>

	<bean id="configurationDataProviderInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	   <property name="targetObject" ref="configurationDataProvider"/>
	   <property name="targetMethod"><value>setMonitoringDataProviderManager</value></property>
	   <property name="arguments">
	     <list>
	       <ref bean="monitoringDataProviderManager"/>
	     </list>
	   </property>
	 </bean>

    <bean id="systemResourceDataProvider" class="org.copperengine.monitoring.server.provider.SystemResourceDataProvider" lazy-init="false">
        <constructor-arg type="org.copperengine.monitoring.server.monitoring.MonitoringDataCollector">
            <ref bean="monitoringDataCollector"/>
        </constructor-arg>
    </bean>

    <!-- This default handler takes care of each of the services enumerated below -->
    <bean id="defaultHandlerMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
        <property name="alwaysUseFullPath" value="true"/>
    </bean>

    <bean id="defaultRemoteInvocationExecutor" class="org.springframework.remoting.support.DefaultRemoteInvocationExecutor" scope="prototype"/>

    <bean name="/monitoring/copperMonitoringService" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter" scope="prototype">
        <property name="service" ref="default-copper-monitoring-service"/>
        <property name="serviceInterface" value="org.copperengine.monitoring.core.CopperMonitoringService" />
        <property name="remoteInvocationExecutor" ref="defaultRemoteInvocationExecutor"/>
    </bean>

    <bean id="monitoring-login-service-impl" class="org.copperengine.monitoring.server.DefaultLoginService" scope="prototype"/>

    <bean name="/monitoring/loginService" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter" scope="prototype">
        <property name="serviceInterface" value="org.copperengine.monitoring.core.LoginService" />
        <property name="service" ref="monitoring-login-service-impl" />
    </bean>


        <!--
            <bean id="log4jConfigManager" class="org.copperengine.core.monitoring.server.logging.Log4jConfigManager">
                <constructor-arg type="org.copperengine.core.monitoring.server.provider.MonitoringLog4jDataProvider">
                    <ref bean="monitoringLog4jDataProvider"/>
                </constructor-arg>
            </bean>

            <bean id="monitoringLog4jDataProvider" class="org.copperengine.core.monitoring.server.provider.MonitoringLog4jDataProvider" lazy-init="false">
                <constructor-arg type="org.copperengine.core.monitoring.server.monitoring.MonitoringDataCollector">
                    <ref bean="monitoringDataCollector"/>
                </constructor-arg>
            </bean>
        -->

</beans>
